(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{506:function(t,a,e){"use strict";e.r(a);var r=e(2),o=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"more-relationship-drama"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#more-relationship-drama"}},[t._v("#")]),t._v(" More relationship drama...")]),t._v(" "),e("h2",{attrs:{id:"what-is-a-virtual-property"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-virtual-property"}},[t._v("#")]),t._v(" What is a virtual property?")]),t._v(" "),e("p",[t._v("A virtual property is one that is not actually stored in the database on that data -object. It is appended on to the body of a return from a front end request, for ease of use.")]),t._v(" "),e("h2",{attrs:{id:"when-might-you-use-a-virtual-property"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#when-might-you-use-a-virtual-property"}},[t._v("#")]),t._v(" When might you use a virtual property?")]),t._v(" "),e("p",[t._v("When there is relationship between two data objects, one might append virtuals on one or both of the objects that tie it to the other.")]),t._v(" "),e("h2",{attrs:{id:"how-do-you-search-by-a-virtual-properties-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-search-by-a-virtual-properties-value"}},[t._v("#")]),t._v(" How do you search by a virtual properties value?")]),t._v(" "),e("p",[t._v("You cannot. The only way to access virtual properties, is to know the address of the parent schema/model and find them that way.")])])}),[],!1,null,null,null);a.default=o.exports}}]);